// Code generated by protoc-gen-go.
// source: GxProto.proto
// DO NOT EDIT!

/*
Package GxProto is a generated protocol buffer package.

It is generated from these files:
	GxProto.proto

It has these top-level messages:
	PlayerRaw
	GameSrvInfo
	LoginRspInfo
	RoleCommonInfo
	RequestInfo
	Handshake
	LoginServerReq
	LoginServerRsp
	GetRoleListReq
	GetRoleListRsp
	SelectRoleReq
	SelectRoleRsp
	CreateRoleReq
	CreateRoleRsp
	ServerConnectGateReq
*/
package GxProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 性别.
type Sex int32

const (
	Sex_GC_SEX_BOY  Sex = 0
	Sex_GC_SEX_GIRL Sex = 1
)

var Sex_name = map[int32]string{
	0: "GC_SEX_BOY",
	1: "GC_SEX_GIRL",
}
var Sex_value = map[string]int32{
	"GC_SEX_BOY":  0,
	"GC_SEX_GIRL": 1,
}

func (x Sex) Enum() *Sex {
	p := new(Sex)
	*p = x
	return p
}
func (x Sex) String() string {
	return proto.EnumName(Sex_name, int32(x))
}
func (x *Sex) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Sex_value, data, "Sex")
	if err != nil {
		return err
	}
	*x = Sex(value)
	return nil
}

// 可能的终端类型.
type TerminalType int32

const (
	TerminalType_GC_TT_IPHONE  TerminalType = 0
	TerminalType_GC_TT_IPAD    TerminalType = 1
	TerminalType_GC_TT_ANDROID TerminalType = 2
	TerminalType_GC_TT_WP      TerminalType = 3
	TerminalType_GC_TT_PC      TerminalType = 4
)

var TerminalType_name = map[int32]string{
	0: "GC_TT_IPHONE",
	1: "GC_TT_IPAD",
	2: "GC_TT_ANDROID",
	3: "GC_TT_WP",
	4: "GC_TT_PC",
}
var TerminalType_value = map[string]int32{
	"GC_TT_IPHONE":  0,
	"GC_TT_IPAD":    1,
	"GC_TT_ANDROID": 2,
	"GC_TT_WP":      3,
	"GC_TT_PC":      4,
}

func (x TerminalType) Enum() *TerminalType {
	p := new(TerminalType)
	*p = x
	return p
}
func (x TerminalType) String() string {
	return proto.EnumName(TerminalType_name, int32(x))
}
func (x *TerminalType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TerminalType_value, data, "TerminalType")
	if err != nil {
		return err
	}
	*x = TerminalType(value)
	return nil
}

// 支持的接入平台类型
type PlatformType int32

const (
	PlatformType_GC_PT_RAW_GAS      PlatformType = 0
	PlatformType_GC_PT_PP_ASSISTANT PlatformType = 1
	PlatformType_GC_PT_KUAI_YONG    PlatformType = 2
	PlatformType_GC_PT_91_ASSISTANT PlatformType = 3
	PlatformType_GC_PT_TONGBUTUI    PlatformType = 4
	PlatformType_GC_PT_ITOOLS       PlatformType = 5
	PlatformType_GC_PT_06           PlatformType = 6
	PlatformType_GC_PT_07           PlatformType = 7
	PlatformType_GC_PT_08           PlatformType = 8
	PlatformType_GC_PT_09           PlatformType = 9
	PlatformType_GC_PT_0A           PlatformType = 10
	PlatformType_GC_PT_0B           PlatformType = 11
	PlatformType_GC_PT_0C           PlatformType = 12
	PlatformType_GC_PT_0D           PlatformType = 13
	PlatformType_GC_PT_0E           PlatformType = 14
	PlatformType_GC_PT_0F           PlatformType = 15
	PlatformType_GC_PT_10           PlatformType = 16
	PlatformType_GC_PT_11           PlatformType = 17
	PlatformType_GC_PT_12           PlatformType = 18
	PlatformType_GC_PT_13           PlatformType = 19
	PlatformType_GC_PT_14           PlatformType = 20
	PlatformType_GC_PT_15           PlatformType = 21
	PlatformType_GC_PT_16           PlatformType = 22
	PlatformType_GC_PT_17           PlatformType = 23
	PlatformType_GC_PT_18           PlatformType = 24
	PlatformType_GC_PT_19           PlatformType = 25
	PlatformType_GC_PT_1A           PlatformType = 26
	PlatformType_GC_PT_1B           PlatformType = 27
	PlatformType_GC_PT_1C           PlatformType = 28
	PlatformType_GC_PT_1D           PlatformType = 29
	PlatformType_GC_PT_1E           PlatformType = 30
	PlatformType_GC_PT_1F           PlatformType = 31
	PlatformType_GC_PT_20           PlatformType = 32
	PlatformType_GC_PT_21           PlatformType = 33
	PlatformType_GC_PT_22           PlatformType = 34
	PlatformType_GC_PT_23           PlatformType = 35
	PlatformType_GC_PT_24           PlatformType = 36
	PlatformType_GC_PT_25           PlatformType = 37
	PlatformType_GC_PT_26           PlatformType = 38
	PlatformType_GC_PT_27           PlatformType = 39
	PlatformType_GC_PT_28           PlatformType = 40
	PlatformType_GC_PT_29           PlatformType = 41
	PlatformType_GC_PT_2A           PlatformType = 42
	PlatformType_GC_PT_2B           PlatformType = 43
	PlatformType_GC_PT_2C           PlatformType = 44
	PlatformType_GC_PT_2D           PlatformType = 45
	PlatformType_GC_PT_2E           PlatformType = 46
	PlatformType_GC_PT_2F           PlatformType = 47
)

var PlatformType_name = map[int32]string{
	0:  "GC_PT_RAW_GAS",
	1:  "GC_PT_PP_ASSISTANT",
	2:  "GC_PT_KUAI_YONG",
	3:  "GC_PT_91_ASSISTANT",
	4:  "GC_PT_TONGBUTUI",
	5:  "GC_PT_ITOOLS",
	6:  "GC_PT_06",
	7:  "GC_PT_07",
	8:  "GC_PT_08",
	9:  "GC_PT_09",
	10: "GC_PT_0A",
	11: "GC_PT_0B",
	12: "GC_PT_0C",
	13: "GC_PT_0D",
	14: "GC_PT_0E",
	15: "GC_PT_0F",
	16: "GC_PT_10",
	17: "GC_PT_11",
	18: "GC_PT_12",
	19: "GC_PT_13",
	20: "GC_PT_14",
	21: "GC_PT_15",
	22: "GC_PT_16",
	23: "GC_PT_17",
	24: "GC_PT_18",
	25: "GC_PT_19",
	26: "GC_PT_1A",
	27: "GC_PT_1B",
	28: "GC_PT_1C",
	29: "GC_PT_1D",
	30: "GC_PT_1E",
	31: "GC_PT_1F",
	32: "GC_PT_20",
	33: "GC_PT_21",
	34: "GC_PT_22",
	35: "GC_PT_23",
	36: "GC_PT_24",
	37: "GC_PT_25",
	38: "GC_PT_26",
	39: "GC_PT_27",
	40: "GC_PT_28",
	41: "GC_PT_29",
	42: "GC_PT_2A",
	43: "GC_PT_2B",
	44: "GC_PT_2C",
	45: "GC_PT_2D",
	46: "GC_PT_2E",
	47: "GC_PT_2F",
}
var PlatformType_value = map[string]int32{
	"GC_PT_RAW_GAS":      0,
	"GC_PT_PP_ASSISTANT": 1,
	"GC_PT_KUAI_YONG":    2,
	"GC_PT_91_ASSISTANT": 3,
	"GC_PT_TONGBUTUI":    4,
	"GC_PT_ITOOLS":       5,
	"GC_PT_06":           6,
	"GC_PT_07":           7,
	"GC_PT_08":           8,
	"GC_PT_09":           9,
	"GC_PT_0A":           10,
	"GC_PT_0B":           11,
	"GC_PT_0C":           12,
	"GC_PT_0D":           13,
	"GC_PT_0E":           14,
	"GC_PT_0F":           15,
	"GC_PT_10":           16,
	"GC_PT_11":           17,
	"GC_PT_12":           18,
	"GC_PT_13":           19,
	"GC_PT_14":           20,
	"GC_PT_15":           21,
	"GC_PT_16":           22,
	"GC_PT_17":           23,
	"GC_PT_18":           24,
	"GC_PT_19":           25,
	"GC_PT_1A":           26,
	"GC_PT_1B":           27,
	"GC_PT_1C":           28,
	"GC_PT_1D":           29,
	"GC_PT_1E":           30,
	"GC_PT_1F":           31,
	"GC_PT_20":           32,
	"GC_PT_21":           33,
	"GC_PT_22":           34,
	"GC_PT_23":           35,
	"GC_PT_24":           36,
	"GC_PT_25":           37,
	"GC_PT_26":           38,
	"GC_PT_27":           39,
	"GC_PT_28":           40,
	"GC_PT_29":           41,
	"GC_PT_2A":           42,
	"GC_PT_2B":           43,
	"GC_PT_2C":           44,
	"GC_PT_2D":           45,
	"GC_PT_2E":           46,
	"GC_PT_2F":           47,
}

func (x PlatformType) Enum() *PlatformType {
	p := new(PlatformType)
	*p = x
	return p
}
func (x PlatformType) String() string {
	return proto.EnumName(PlatformType_name, int32(x))
}
func (x *PlatformType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlatformType_value, data, "PlatformType")
	if err != nil {
		return err
	}
	*x = PlatformType(value)
	return nil
}

// 运营版本.
type GameRunType int32

const (
	GameRunType_GC_GR_TEST   GameRunType = 0
	GameRunType_GC_GR_91     GameRunType = 1
	GameRunType_GC_GR_APPALE GameRunType = 2
	GameRunType_GC_GR_CW     GameRunType = 3
	GameRunType_GC_GR_EXT1   GameRunType = 4
	GameRunType_GC_GR_EXT2   GameRunType = 5
	GameRunType_GC_GR_EXT3   GameRunType = 6
	GameRunType_GC_GR_EXT4   GameRunType = 7
	GameRunType_GC_GR_EXT5   GameRunType = 8
	GameRunType_GC_GR_EXT6   GameRunType = 9
)

var GameRunType_name = map[int32]string{
	0: "GC_GR_TEST",
	1: "GC_GR_91",
	2: "GC_GR_APPALE",
	3: "GC_GR_CW",
	4: "GC_GR_EXT1",
	5: "GC_GR_EXT2",
	6: "GC_GR_EXT3",
	7: "GC_GR_EXT4",
	8: "GC_GR_EXT5",
	9: "GC_GR_EXT6",
}
var GameRunType_value = map[string]int32{
	"GC_GR_TEST":   0,
	"GC_GR_91":     1,
	"GC_GR_APPALE": 2,
	"GC_GR_CW":     3,
	"GC_GR_EXT1":   4,
	"GC_GR_EXT2":   5,
	"GC_GR_EXT3":   6,
	"GC_GR_EXT4":   7,
	"GC_GR_EXT5":   8,
	"GC_GR_EXT6":   9,
}

func (x GameRunType) Enum() *GameRunType {
	p := new(GameRunType)
	*p = x
	return p
}
func (x GameRunType) String() string {
	return proto.EnumName(GameRunType_name, int32(x))
}
func (x *GameRunType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameRunType_value, data, "GameRunType")
	if err != nil {
		return err
	}
	*x = GameRunType(value)
	return nil
}

// common
type PlayerRaw struct {
	Username         *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Pwd              *string `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	Email            *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerRaw) Reset()         { *m = PlayerRaw{} }
func (m *PlayerRaw) String() string { return proto.CompactTextString(m) }
func (*PlayerRaw) ProtoMessage()    {}

func (m *PlayerRaw) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *PlayerRaw) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *PlayerRaw) GetEmail() string {
	if m != nil && m.Email != nil {
		return *m.Email
	}
	return ""
}

type GameSrvInfo struct {
	Index            *uint32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Status           *uint32 `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Lastts           *uint32 `protobuf:"varint,4,opt,name=lastts" json:"lastts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameSrvInfo) Reset()         { *m = GameSrvInfo{} }
func (m *GameSrvInfo) String() string { return proto.CompactTextString(m) }
func (*GameSrvInfo) ProtoMessage()    {}

func (m *GameSrvInfo) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *GameSrvInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GameSrvInfo) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *GameSrvInfo) GetLastts() uint32 {
	if m != nil && m.Lastts != nil {
		return *m.Lastts
	}
	return 0
}

// 登录游戏相关数据.
type LoginRspInfo struct {
	Token            *string        `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Host             *string        `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port             *uint32        `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Srvs             []*GameSrvInfo `protobuf:"bytes,4,rep,name=srvs" json:"srvs,omitempty"`
	Version1         *string        `protobuf:"bytes,5,opt,name=version1" json:"version1,omitempty"`
	Version2         *string        `protobuf:"bytes,6,opt,name=version2" json:"version2,omitempty"`
	Version3         *string        `protobuf:"bytes,7,opt,name=version3" json:"version3,omitempty"`
	Download         *string        `protobuf:"bytes,8,opt,name=download" json:"download,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LoginRspInfo) Reset()         { *m = LoginRspInfo{} }
func (m *LoginRspInfo) String() string { return proto.CompactTextString(m) }
func (*LoginRspInfo) ProtoMessage()    {}

func (m *LoginRspInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *LoginRspInfo) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *LoginRspInfo) GetPort() uint32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *LoginRspInfo) GetSrvs() []*GameSrvInfo {
	if m != nil {
		return m.Srvs
	}
	return nil
}

func (m *LoginRspInfo) GetVersion1() string {
	if m != nil && m.Version1 != nil {
		return *m.Version1
	}
	return ""
}

func (m *LoginRspInfo) GetVersion2() string {
	if m != nil && m.Version2 != nil {
		return *m.Version2
	}
	return ""
}

func (m *LoginRspInfo) GetVersion3() string {
	if m != nil && m.Version3 != nil {
		return *m.Version3
	}
	return ""
}

func (m *LoginRspInfo) GetDownload() string {
	if m != nil && m.Download != nil {
		return *m.Download
	}
	return ""
}

type RoleCommonInfo struct {
	Id               *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	VocationId       *uint32 `protobuf:"varint,3,opt,name=vocationId" json:"vocationId,omitempty"`
	Vip              *uint32 `protobuf:"varint,4,opt,name=vip" json:"vip,omitempty"`
	Expr             *uint64 `protobuf:"varint,5,opt,name=expr" json:"expr,omitempty"`
	Money            *uint64 `protobuf:"varint,6,opt,name=money" json:"money,omitempty"`
	Gold             *uint64 `protobuf:"varint,7,opt,name=gold" json:"gold,omitempty"`
	Power            *uint64 `protobuf:"varint,8,opt,name=power" json:"power,omitempty"`
	Powerts          *uint64 `protobuf:"varint,9,opt,name=powerts" json:"powerts,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RoleCommonInfo) Reset()         { *m = RoleCommonInfo{} }
func (m *RoleCommonInfo) String() string { return proto.CompactTextString(m) }
func (*RoleCommonInfo) ProtoMessage()    {}

func (m *RoleCommonInfo) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RoleCommonInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RoleCommonInfo) GetVocationId() uint32 {
	if m != nil && m.VocationId != nil {
		return *m.VocationId
	}
	return 0
}

func (m *RoleCommonInfo) GetVip() uint32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *RoleCommonInfo) GetExpr() uint64 {
	if m != nil && m.Expr != nil {
		return *m.Expr
	}
	return 0
}

func (m *RoleCommonInfo) GetMoney() uint64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *RoleCommonInfo) GetGold() uint64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *RoleCommonInfo) GetPower() uint64 {
	if m != nil && m.Power != nil {
		return *m.Power
	}
	return 0
}

func (m *RoleCommonInfo) GetPowerts() uint64 {
	if m != nil && m.Powerts != nil {
		return *m.Powerts
	}
	return 0
}

// 请求附带信息
// 掉线重连后可以设置token继续操作，token保存一个小时
type RequestInfo struct {
	Token            *string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RequestInfo) Reset()         { *m = RequestInfo{} }
func (m *RequestInfo) String() string { return proto.CompactTextString(m) }
func (*RequestInfo) ProtoMessage()    {}

func (m *RequestInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

// connect,握手五步骤
// 1.S2C，当新连接上来，服务端会发送16个字节的随机字符串，作握手验证用途。
// 2.C2S，客户端生成DH-secret公钥发送至服务器
// 3.S2C，服务器生成DH-secret公钥发送至客户端
// 4.C2S，客户端使用DH-secret得到公共8字节字符串，将步骤1得到16字节的随机字符串密码，发送到服务器
// 5.S2C，服务器使用DH-secret得到公共8字节字符串，将客户端发送过来加密过的字符串解密，和步骤1随机字符串一致，则握手成功；随后客户端和服务端通讯使用DH-secret得到的公共8字节字符串作为密钥，使用DES加密消息
type Handshake struct {
	Str              []byte `protobuf:"bytes,1,opt,name=str" json:"str,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Handshake) Reset()         { *m = Handshake{} }
func (m *Handshake) String() string { return proto.CompactTextString(m) }
func (*Handshake) ProtoMessage()    {}

func (m *Handshake) GetStr() []byte {
	if m != nil {
		return m.Str
	}
	return nil
}

// login
// 登陆帐号请求.
type LoginServerReq struct {
	Tt               *TerminalType `protobuf:"varint,1,opt,name=tt,enum=TerminalType" json:"tt,omitempty"`
	Pt               *PlatformType `protobuf:"varint,2,opt,name=pt,enum=PlatformType" json:"pt,omitempty"`
	Gr               *GameRunType  `protobuf:"varint,3,opt,name=gr,enum=GameRunType" json:"gr,omitempty"`
	Raw              *PlayerRaw    `protobuf:"bytes,4,opt,name=raw" json:"raw,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LoginServerReq) Reset()         { *m = LoginServerReq{} }
func (m *LoginServerReq) String() string { return proto.CompactTextString(m) }
func (*LoginServerReq) ProtoMessage()    {}

func (m *LoginServerReq) GetTt() TerminalType {
	if m != nil && m.Tt != nil {
		return *m.Tt
	}
	return TerminalType_GC_TT_IPHONE
}

func (m *LoginServerReq) GetPt() PlatformType {
	if m != nil && m.Pt != nil {
		return *m.Pt
	}
	return PlatformType_GC_PT_RAW_GAS
}

func (m *LoginServerReq) GetGr() GameRunType {
	if m != nil && m.Gr != nil {
		return *m.Gr
	}
	return GameRunType_GC_GR_TEST
}

func (m *LoginServerReq) GetRaw() *PlayerRaw {
	if m != nil {
		return m.Raw
	}
	return nil
}

// 登陆帐号响应
type LoginServerRsp struct {
	Info             *LoginRspInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LoginServerRsp) Reset()         { *m = LoginServerRsp{} }
func (m *LoginServerRsp) String() string { return proto.CompactTextString(m) }
func (*LoginServerRsp) ProtoMessage()    {}

func (m *LoginServerRsp) GetInfo() *LoginRspInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// gate
type GetRoleListReq struct {
	Info             *RequestInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GetRoleListReq) Reset()         { *m = GetRoleListReq{} }
func (m *GetRoleListReq) String() string { return proto.CompactTextString(m) }
func (*GetRoleListReq) ProtoMessage()    {}

func (m *GetRoleListReq) GetInfo() *RequestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetRoleListRsp struct {
	Roles            []*RoleCommonInfo `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GetRoleListRsp) Reset()         { *m = GetRoleListRsp{} }
func (m *GetRoleListRsp) String() string { return proto.CompactTextString(m) }
func (*GetRoleListRsp) ProtoMessage()    {}

func (m *GetRoleListRsp) GetRoles() []*RoleCommonInfo {
	if m != nil {
		return m.Roles
	}
	return nil
}

type SelectRoleReq struct {
	Info             *RequestInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	RoleId           *uint32      `protobuf:"varint,2,opt,name=roleId" json:"roleId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SelectRoleReq) Reset()         { *m = SelectRoleReq{} }
func (m *SelectRoleReq) String() string { return proto.CompactTextString(m) }
func (*SelectRoleReq) ProtoMessage()    {}

func (m *SelectRoleReq) GetInfo() *RequestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *SelectRoleReq) GetRoleId() uint32 {
	if m != nil && m.RoleId != nil {
		return *m.RoleId
	}
	return 0
}

type SelectRoleRsp struct {
	Role             *RoleCommonInfo `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SelectRoleRsp) Reset()         { *m = SelectRoleRsp{} }
func (m *SelectRoleRsp) String() string { return proto.CompactTextString(m) }
func (*SelectRoleRsp) ProtoMessage()    {}

func (m *SelectRoleRsp) GetRole() *RoleCommonInfo {
	if m != nil {
		return m.Role
	}
	return nil
}

type CreateRoleReq struct {
	Info             *RequestInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Name             *string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	VocationId       *uint32      `protobuf:"varint,3,opt,name=VocationId" json:"VocationId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CreateRoleReq) Reset()         { *m = CreateRoleReq{} }
func (m *CreateRoleReq) String() string { return proto.CompactTextString(m) }
func (*CreateRoleReq) ProtoMessage()    {}

func (m *CreateRoleReq) GetInfo() *RequestInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *CreateRoleReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CreateRoleReq) GetVocationId() uint32 {
	if m != nil && m.VocationId != nil {
		return *m.VocationId
	}
	return 0
}

type CreateRoleRsp struct {
	Role             *RoleCommonInfo `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *CreateRoleRsp) Reset()         { *m = CreateRoleRsp{} }
func (m *CreateRoleRsp) String() string { return proto.CompactTextString(m) }
func (*CreateRoleRsp) ProtoMessage()    {}

func (m *CreateRoleRsp) GetRole() *RoleCommonInfo {
	if m != nil {
		return m.Role
	}
	return nil
}

type ServerConnectGateReq struct {
	Id               *uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Cmds             []uint32 `protobuf:"varint,2,rep,name=cmds" json:"cmds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ServerConnectGateReq) Reset()         { *m = ServerConnectGateReq{} }
func (m *ServerConnectGateReq) String() string { return proto.CompactTextString(m) }
func (*ServerConnectGateReq) ProtoMessage()    {}

func (m *ServerConnectGateReq) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ServerConnectGateReq) GetCmds() []uint32 {
	if m != nil {
		return m.Cmds
	}
	return nil
}

func init() {
	proto.RegisterEnum("Sex", Sex_name, Sex_value)
	proto.RegisterEnum("TerminalType", TerminalType_name, TerminalType_value)
	proto.RegisterEnum("PlatformType", PlatformType_name, PlatformType_value)
	proto.RegisterEnum("GameRunType", GameRunType_name, GameRunType_value)
}
